// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhatIsNext.Model.Contexts;

namespace WhatIsNext.Migrations
{
    [DbContext(typeof(WinContext))]
    partial class WinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WhatIsNext.Model.Entities.Concept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ConceptId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("GraphId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ConceptId");

                    b.HasIndex("GraphId");

                    b.ToTable("Concepts");
                });

            modelBuilder.Entity("WhatIsNext.Model.Entities.Graph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Topic")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("WhatIsNext.Model.Entities.Concept", b =>
                {
                    b.HasOne("WhatIsNext.Model.Entities.Concept")
                        .WithMany("Dependencies")
                        .HasForeignKey("ConceptId");

                    b.HasOne("WhatIsNext.Model.Entities.Graph", "Graph")
                        .WithMany("Concepts")
                        .HasForeignKey("GraphId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
